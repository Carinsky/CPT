model{

# CPT likelihood
	
	for (j in 1:nsub) { # subject loop
	
	  for (i in 1:nprob[j])	{ # problem loop

      # subjective values
      
	    vLA[j,i] <- pow(LA[i], alpha[j])
	    vHA[j,i] <- pow(HA[i], alpha[j])
	    vLB[j,i] <- pow(LB[i], alpha[j])
	    vHB[j,i] <- pow(HB[i], alpha[j])

	    # decision weights

	    piHA[j,i] <- (delta[j] * (pow(sprobHA[j,i], gamma[j]))) / (delta[j] * (pow(sprobHA[j,i], gamma[j])) + pow(sprobLA[j,i], gamma[j]))
	    piLA[j,i] <- 1-piHA[j,i]
	
	    piHB[j,i] <- (delta[j] * (pow(sprobHB[j,i], gamma[j]))) / (delta[j] * (pow(sprobHB[j,i], gamma[j])) + pow(sprobLB[j,i], gamma[j]))
	    piLB[j,i] <- 1-piHB[j,i]
	
	    # valuations

	    VA[j,i]  <- piHA[j,i] * vHA[j,i] + piLA[j,i] * vLA[j,i]
	    VB[j,i]  <- piHB[j,i] * vHB[j,i] + piLB[j,i] * vLB[j,i]

	    # rescaling valuations (cf. Krefeld-Schwalb et al., 2021; Stewart et al., 2018)

	    reVA[j,i] <- pow(VA[j,i], (1/alpha[j]))
	    reVB[j,i] <- pow(VB[j,i], (1/alpha[j]))

	    # softmax choice rule

	    pB[j,i] <- (1)/(1+exp((-1*rho[j])*(reVB[j,i]-reVA[j,i])))
	    choice[j,i] ~ dbern(pB[j,i])
	  
	  }
	}

# priors

#prior distributions are defined on the probit scale in the range from -5 to 5. Values need to be transformed to the desired scale (0-1) using the inverse probit function phi(). Procedure has primarily technical reasons. the normal distributions on probit scale correspond to flat priors on the desired scale.

  # hyperparameters

  mu.probit.alpha ~ dnorm(0,1)T(-5,5)
  sigma.probit.alpha ~ dunif(0,10)
  tau.probit.alpha <- pow(sigma.probit.alpha,-2)

  mu.probit.gamma ~ dnorm(0,1)T(-5,5)
  sigma.probit.gamma ~ dunif(0,10)
  tau.probit.gamma <- pow(sigma.probit.gamma,-2)

  mu.probit.delta ~ dnorm(0,1)T(-5,5) 
  sigma.probit.delta ~ dunif(0,10)
  tau.probit.delta <- pow(sigma.probit.delta,-2)

  mu.probit.rho ~ dnorm(0,1)T(-5,5) 
  sigma.probit.rho ~ dunif(0,10)
  tau.probit.rho <- pow(sigma.probit.rho,-2)

  # inverse-probit to obtain values in [0,1]*scale, scale sets prior boundaries
    
  mu.alpha <- phi(mu.probit.alpha) * 2 
  mu.gamma <- phi(mu.probit.gamma) * 2
  mu.delta <- phi(mu.probit.delta) * 5 
  mu.rho <- phi(mu.probit.rho) * 5

  
  # individual parameters
  
  for (j in 1:nsub) {

    probit.alpha[j] ~ dnorm(mu.probit.alpha, tau.probit.alpha)T(-5,5)
    probit.gamma[j] ~ dnorm(mu.probit.gamma, tau.probit.gamma)T(-5,5)
    probit.delta[j] ~ dnorm(mu.probit.delta, tau.probit.delta)T(-5,5)
    probit.rho[j] ~ dnorm(mu.probit.rho, tau.probit.rho)T(-5,5) 
    
    # inverse-probit to obtain values in [0,1]*scale, scale sets prior boundaries
    
    alpha[j] <- phi(probit.alpha[j]) * 2 
    gamma[j] <- phi(probit.gamma[j]) * 2 
    delta[j] <- phi(probit.delta[j]) * 5
    rho[j] <- phi(probit.rho[j]) * 5

  }

}